name: Continuous Integration

on: [push, pull_request]

jobs:
  format:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    container:
      image:  google/dart:beta
    steps:
      - uses: actions/checkout@v2
      - name: Ensure idiomatic Dart source code formatting
        run: dartfmt --set-exit-if-changed .

  analyze:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    container:
      image:  google/dart:beta
    steps:
      - uses: actions/checkout@v2
      - name: Ensure no analysis errors
        run: |
          dart analyze --fatal-infos --fatal-warnings lib
          dart analyze --fatal-infos --fatal-warnings test

  test-ubuntu:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    container:
      image:  google/dart:beta
    steps:
      - uses: actions/checkout@v2
      - name: Get the package's dependencies
        run: pub get
      - name: Run tests in the package
        run: pub run test

  example-dart:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    container:
      image:  google/dart:beta
    steps:
      - uses: actions/checkout@v2
      - name: Verify example formatted correctly
        run: |
          cd example/dart
          dartfmt --set-exit-if-changed .
      - name: Verify example has no analysis errors
        run: dart analyze --fatal-infos --fatal-warnings .
      - name: Verify example compiles correctly
        run: dart compile aot-snapshot whatsapp_unilink_example.dart

  # We also have a Flutter example, that's currently not verified
  # as part of the CI process.

  publish:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [format, analyze, test-ubuntu, example-dart]
    if: github.ref == 'refs/heads/master'
    # Continue on error doesn't seem to work?
    # Using || true for publishing
    # continue-on-error: true
    container:
      image:  google/dart:beta
    steps:
      - uses: actions/checkout@v2
      - name: Setup credentials
        run: |
          mkdir -p ~/.pub-cache
          echo ${{ secrets.PUB_CREDENTIALS_JSON }} > ~/.pub-cache/credentials.json
      - name: Publish the package to pub.dartlang.org
        run: pub publish --force || true
      - name: Delete credentials
        run: rm ~/.pub-cache/credentials.json

  coverage:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: publish
    if: github.ref == 'refs/heads/master'
    container:
      image:  google/dart:beta
    steps:
      - uses: actions/checkout@v1
      - name: Get the package's dependencies
        run: pub get
      - name: Collect coverage
        run: |
          pub global activate test_coverage
          pub global run test_coverage
      - uses: codecov/codecov-action@v1.0.0
        with:
          flags: unittests
          file: coverage/lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
